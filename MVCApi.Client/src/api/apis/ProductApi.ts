/* tslint:disable */
/* eslint-disable */
/**
 * MVCApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateProduct,
    CreateProductFromJSON,
    CreateProductToJSON,
    ProductDto,
    ProductDtoFromJSON,
    ProductDtoToJSON,
} from '../models';

export interface ApiProductCreateProductPostRequest {
    createProduct?: CreateProduct;
}

export interface ApiProductGetProductByIdProductIdGetRequest {
    productId: string;
}

/**
 * 
 */
export class ProductApi extends runtime.BaseAPI {

    /**
     */
    async apiProductCreateProductPostRaw(requestParameters: ApiProductCreateProductPostRequest): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Product/CreateProduct`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateProductToJSON(requestParameters.createProduct),
        });

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async apiProductCreateProductPost(requestParameters: ApiProductCreateProductPostRequest): Promise<string> {
        const response = await this.apiProductCreateProductPostRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async apiProductGetProductByIdProductIdGetRaw(requestParameters: ApiProductGetProductByIdProductIdGetRequest): Promise<runtime.ApiResponse<ProductDto>> {
        if (requestParameters.productId === null || requestParameters.productId === undefined) {
            throw new runtime.RequiredError('productId','Required parameter requestParameters.productId was null or undefined when calling apiProductGetProductByIdProductIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Product/GetProductById/{ProductId}`.replace(`{${"ProductId"}}`, encodeURIComponent(String(requestParameters.productId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => ProductDtoFromJSON(jsonValue));
    }

    /**
     */
    async apiProductGetProductByIdProductIdGet(requestParameters: ApiProductGetProductByIdProductIdGetRequest): Promise<ProductDto> {
        const response = await this.apiProductGetProductByIdProductIdGetRaw(requestParameters);
        return await response.value();
    }

}
