/* tslint:disable */
/* eslint-disable */
/**
 * MVCApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateCustomer,
    CreateCustomerFromJSON,
    CreateCustomerToJSON,
    CustomerDto,
    CustomerDtoFromJSON,
    CustomerDtoToJSON,
} from '../models';

export interface ApiCustomerCreateCustomerPostRequest {
    createCustomer?: CreateCustomer;
}

export interface ApiCustomerGetCustomerByIdIdGetRequest {
    id: string;
}

/**
 * 
 */
export class CustomerApi extends runtime.BaseAPI {

    /**
     */
    async apiCustomerCreateCustomerPostRaw(requestParameters: ApiCustomerCreateCustomerPostRequest): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Customer/CreateCustomer`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateCustomerToJSON(requestParameters.createCustomer),
        });

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async apiCustomerCreateCustomerPost(requestParameters: ApiCustomerCreateCustomerPostRequest): Promise<string> {
        const response = await this.apiCustomerCreateCustomerPostRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async apiCustomerGetAllCustomersGetRaw(): Promise<runtime.ApiResponse<Array<CustomerDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Customer/GetAllCustomers`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CustomerDtoFromJSON));
    }

    /**
     */
    async apiCustomerGetAllCustomersGet(): Promise<Array<CustomerDto>> {
        const response = await this.apiCustomerGetAllCustomersGetRaw();
        return await response.value();
    }

    /**
     */
    async apiCustomerGetCustomerByIdIdGetRaw(requestParameters: ApiCustomerGetCustomerByIdIdGetRequest): Promise<runtime.ApiResponse<CustomerDto>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiCustomerGetCustomerByIdIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Customer/GetCustomerById/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => CustomerDtoFromJSON(jsonValue));
    }

    /**
     */
    async apiCustomerGetCustomerByIdIdGet(requestParameters: ApiCustomerGetCustomerByIdIdGetRequest): Promise<CustomerDto> {
        const response = await this.apiCustomerGetCustomerByIdIdGetRaw(requestParameters);
        return await response.value();
    }

}
