/* tslint:disable */
/* eslint-disable */
/**
 * MVCApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AddressDto,
    AddressDtoFromJSON,
    AddressDtoToJSON,
    EditAddress,
    EditAddressFromJSON,
    EditAddressToJSON,
} from '../models';

export interface ApiAddressEditAddressIdPutRequest {
    id: string;
    editAddress?: EditAddress;
}

export interface ApiAddressGetAddressByIdIdGetRequest {
    id: string;
}

/**
 * 
 */
export class AddressApi extends runtime.BaseAPI {

    /**
     */
    async apiAddressEditAddressIdPutRaw(requestParameters: ApiAddressEditAddressIdPutRequest): Promise<runtime.ApiResponse<string>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiAddressEditAddressIdPut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Address/EditAddress/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: EditAddressToJSON(requestParameters.editAddress),
        });

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async apiAddressEditAddressIdPut(requestParameters: ApiAddressEditAddressIdPutRequest): Promise<string> {
        const response = await this.apiAddressEditAddressIdPutRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async apiAddressGetAddressByIdIdGetRaw(requestParameters: ApiAddressGetAddressByIdIdGetRequest): Promise<runtime.ApiResponse<AddressDto>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiAddressGetAddressByIdIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Address/GetAddressById/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AddressDtoFromJSON(jsonValue));
    }

    /**
     */
    async apiAddressGetAddressByIdIdGet(requestParameters: ApiAddressGetAddressByIdIdGetRequest): Promise<AddressDto> {
        const response = await this.apiAddressGetAddressByIdIdGetRaw(requestParameters);
        return await response.value();
    }

}
