/* tslint:disable */
/* eslint-disable */
/**
 * MVCApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProductDto,
    ProductDtoFromJSON,
    ProductDtoFromJSONTyped,
    ProductDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface CategoryDto
 */
export interface CategoryDto {
    /**
     * 
     * @type {string}
     * @memberof CategoryDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CategoryDto
     */
    name?: string | null;
    /**
     * 
     * @type {CategoryDto}
     * @memberof CategoryDto
     */
    parent?: CategoryDto;
    /**
     * 
     * @type {Array<CategoryDto>}
     * @memberof CategoryDto
     */
    children?: Array<CategoryDto> | null;
    /**
     * 
     * @type {Array<ProductDto>}
     * @memberof CategoryDto
     */
    products?: Array<ProductDto> | null;
}

export function CategoryDtoFromJSON(json: any): CategoryDto {
    return CategoryDtoFromJSONTyped(json, false);
}

export function CategoryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'parent': !exists(json, 'parent') ? undefined : CategoryDtoFromJSON(json['parent']),
        'children': !exists(json, 'children') ? undefined : (json['children'] === null ? null : (json['children'] as Array<any>).map(CategoryDtoFromJSON)),
        'products': !exists(json, 'products') ? undefined : (json['products'] === null ? null : (json['products'] as Array<any>).map(ProductDtoFromJSON)),
    };
}

export function CategoryDtoToJSON(value?: CategoryDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'parent': CategoryDtoToJSON(value.parent),
        'children': value.children === undefined ? undefined : (value.children === null ? null : (value.children as Array<any>).map(CategoryDtoToJSON)),
        'products': value.products === undefined ? undefined : (value.products === null ? null : (value.products as Array<any>).map(ProductDtoToJSON)),
    };
}


