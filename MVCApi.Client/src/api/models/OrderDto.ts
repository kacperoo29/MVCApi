/* tslint:disable */
/* eslint-disable */
/**
 * MVCApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CustomerDto,
    CustomerDtoFromJSON,
    CustomerDtoFromJSONTyped,
    CustomerDtoToJSON,
    OrderState,
    OrderStateFromJSON,
    OrderStateFromJSONTyped,
    OrderStateToJSON,
    ShoppingCartDto,
    ShoppingCartDtoFromJSON,
    ShoppingCartDtoFromJSONTyped,
    ShoppingCartDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface OrderDto
 */
export interface OrderDto {
    /**
     * 
     * @type {string}
     * @memberof OrderDto
     */
    id?: string;
    /**
     * 
     * @type {CustomerDto}
     * @memberof OrderDto
     */
    customer?: CustomerDto;
    /**
     * 
     * @type {ShoppingCartDto}
     * @memberof OrderDto
     */
    shoppingCart?: ShoppingCartDto;
    /**
     * 
     * @type {OrderState}
     * @memberof OrderDto
     */
    orderState?: OrderState;
}

export function OrderDtoFromJSON(json: any): OrderDto {
    return OrderDtoFromJSONTyped(json, false);
}

export function OrderDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'customer': !exists(json, 'customer') ? undefined : CustomerDtoFromJSON(json['customer']),
        'shoppingCart': !exists(json, 'shoppingCart') ? undefined : ShoppingCartDtoFromJSON(json['shoppingCart']),
        'orderState': !exists(json, 'orderState') ? undefined : OrderStateFromJSON(json['orderState']),
    };
}

export function OrderDtoToJSON(value?: OrderDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'customer': CustomerDtoToJSON(value.customer),
        'shoppingCart': ShoppingCartDtoToJSON(value.shoppingCart),
        'orderState': OrderStateToJSON(value.orderState),
    };
}


