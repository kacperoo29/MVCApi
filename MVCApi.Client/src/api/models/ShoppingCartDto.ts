/* tslint:disable */
/* eslint-disable */
/**
 * MVCApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProductCartDto,
    ProductCartDtoFromJSON,
    ProductCartDtoFromJSONTyped,
    ProductCartDtoToJSON,
    ShoppingCartState,
    ShoppingCartStateFromJSON,
    ShoppingCartStateFromJSONTyped,
    ShoppingCartStateToJSON,
} from './';

/**
 * 
 * @export
 * @interface ShoppingCartDto
 */
export interface ShoppingCartDto {
    /**
     * 
     * @type {string}
     * @memberof ShoppingCartDto
     */
    id?: string;
    /**
     * 
     * @type {Array<ProductCartDto>}
     * @memberof ShoppingCartDto
     */
    products?: Array<ProductCartDto> | null;
    /**
     * 
     * @type {ShoppingCartState}
     * @memberof ShoppingCartDto
     */
    state?: ShoppingCartState;
}

export function ShoppingCartDtoFromJSON(json: any): ShoppingCartDto {
    return ShoppingCartDtoFromJSONTyped(json, false);
}

export function ShoppingCartDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShoppingCartDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'products': !exists(json, 'products') ? undefined : (json['products'] === null ? null : (json['products'] as Array<any>).map(ProductCartDtoFromJSON)),
        'state': !exists(json, 'state') ? undefined : ShoppingCartStateFromJSON(json['state']),
    };
}

export function ShoppingCartDtoToJSON(value?: ShoppingCartDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'products': value.products === undefined ? undefined : (value.products === null ? null : (value.products as Array<any>).map(ProductCartDtoToJSON)),
        'state': ShoppingCartStateToJSON(value.state),
    };
}


